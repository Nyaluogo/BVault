@using Bingi_Storage.ViewModels
@model CheckoutViewModel
@{
    ViewData["Title"] = "Checkout";
}

<div class="bingi-checkout-page">
    <section class="main-header glass dynamic-bg" style="margin-bottom:2rem;">
        <div class="header-left">
            <div class="game-info">
                <h1 class="game-title gold montserrat">Checkout</h1>
                <p class="short-desc">Complete your purchase</p>
            </div>
        </div>
    </section>

    <!-- Add global error message display area -->
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="fas fa-exclamation-circle me-2"></i>
            <strong>Error:</strong> @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["PaymentMessage"] != null)
    {
        <div class="alert alert-info alert-dismissible fade show" role="alert">
            <i class="fas fa-info-circle me-2"></i>
            @TempData["PaymentMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <!-- Payment processing status area -->
    <div id="paymentProcessingStatus" class="d-none alert alert-info mb-3">
        <div class="spinner-border spinner-border-sm me-2" role="status">
            <span class="visually-hidden">Processing...</span>
        </div>
        <span id="paymentStatusMessage">Processing your payment, please wait...</span>
    </div>

    <div class="checkout-container">
        <div class="checkout-form glass section">
            <form asp-action="CompleteCheckout" method="post">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <h3 class="gold montserrat">Payment Method</h3>

                @if (!Model.Wallets.Any())
                {
                    <div class="alert alert-warning">
                        You don't have any wallets. Please add a wallet to continue.
                    </div>
                    <a asp-controller="Wallet" asp-action="Create" class="btn gold">Add Wallet</a>
                }
                else
                {
                    <div class="form-group mb-4">
                        <label>Select Wallet</label>
                        <select asp-for="SelectedWalletId" class="form-select glass-input">
                            @foreach (var wallet in Model.Wallets)
                            {
                                <option value="@wallet.Id">@wallet.Name - Balance: $@wallet.Balance.ToString("F2") @wallet.Currency</option>
                            }
                        </select>
                        <span asp-validation-for="SelectedWalletId" class="text-danger"></span>
                    </div>

                    <div class="wallet-balance-warning @(Model.Cart.Total > Model.Wallets.Max(w => w.Balance) ? "d-block" : "d-none")">
                        <div class="alert alert-warning">
                            <i class="fas fa-exclamation-triangle"></i>
                            Insufficient funds in your wallet. Please add funds or select another payment method.
                        </div>
                    </div>


                    

                    <h3 class="gold montserrat mt-4">Order Review</h3>

                    <div class="order-items">
                        @foreach (var item in Model.Cart.Items)
                        {
                            <div class="order-item">
                                <div class="item-image">
                                    <img src="@item.Product.ImageUrl" alt="@item.Product.Title" width="80" />
                                </div>
                                <div class="item-info">
                                    <h5>@item.Product.Title</h5>
                                    <p class="text-muted">@item.Product.Publisher?.Name</p>
                                </div>
                                <div class="item-price">
                                    $@item.UnitPrice.ToString("F2")
                                </div>
                            </div>
                        }
                    </div>

                    <div class="order-summary mt-4">
                        <div class="summary-row">
                            <span>Subtotal</span>
                            <span>$@Model.Cart.Subtotal.ToString("F2")</span>
                        </div>
                        @if (Model.Cart.Discount > 0)
                        {
                            <div class="summary-row discount">
                                <span>Discount</span>
                                <span>-$@Model.Cart.Discount.ToString("F2")</span>
                            </div>
                        }
                        @if (Model.Cart.Tax > 0)
                        {
                            <div class="summary-row">
                                <span>Tax</span>
                                <span>$@Model.Cart.Tax.ToString("F2")</span>
                            </div>
                        }
                        <div class="summary-row total">
                            <span>Total</span>
                            <span>$@Model.Cart.Total.ToString("F2")</span>
                        </div>
                    </div>

                    <div class="checkout-actions mt-4">
                        <a asp-action="Index" class="btn glass">Back to Cart</a>
                        <button type="submit" class="btn gold">Complete Purchase</button>
                    </div>
                }
            </form>

            <h3 class="gold montserrat mt-4">Or Pay With External Provider</h3>

            <div class="payment-methods mt-3">
                @foreach (var method in Model.AvailablePaymentMethods.Where(m =>
                                m.TransProvider == PaymentMethod.Provider.FLUTTERWAVE ||
                                m.TransProvider == PaymentMethod.Provider.MPESA ||
                                m.TransProvider == PaymentMethod.Provider.CRYPTO_WALLET))
                {
                    <div class="payment-method-item mb-3">
                        <form asp-action="ProcessExternalPayment" method="post" class="payment-form">
                            <input type="hidden" name="paymentMethodId" value="@method.Id" />
                            <input type="hidden" name="cartId" value="@Model.Cart.Id" />
                            <input type="hidden" name="returnUrl" value="@Url.Action("PaymentCallback", "Cart", null, Context.Request.Scheme)" />

                            @if (method.TransProvider == PaymentMethod.Provider.MPESA)
                            {
                                <div class="form-group mb-3">
                                    <label asp-for="MpesaPhoneNumber" class="form-label">Phone Number</label>
                                    <input asp-for="MpesaPhoneNumber" class="form-control glass-input" placeholder="0716900000" />
                                    <span asp-validation-for="MpesaPhoneNumber" class="text-danger d-block mt-1"></span>
                                </div>
                            }

                            <button type="submit" class="btn payment-btn glass payment-submit-btn" data-provider="@method.TransProvider">
                                @{
                                    var iconClass = method.TransProvider switch
                                    {
                                        PaymentMethod.Provider.FLUTTERWAVE => "fa-credit-card",
                                        PaymentMethod.Provider.MPESA => "fa-mobile-alt",
                                        PaymentMethod.Provider.CRYPTO_WALLET => "fa-bitcoin",
                                        _ => "fa-money-bill"
                                    };
                                }
                                <i class="fas @iconClass me-2"></i>
                                Pay with @method.Name
                            </button>
                        </form>
                    </div>
                }
            </div>
        </div>

        <div class="checkout-sidebar glass section">
            <h3 class="gold montserrat">Order Summary</h3>
            <div class="summary-row">
                <span>Items (@Model.Cart.Items.Count)</span>
                <span>$@Model.Cart.Subtotal.ToString("F2")</span>
            </div>
            @if (Model.Cart.Discount > 0)
            {
                <div class="summary-row discount">
                    <span>Discount</span>
                    <span>-$@Model.Cart.Discount.ToString("F2")</span>
                </div>
            }
            @if (Model.Cart.Tax > 0)
            {
                <div class="summary-row">
                    <span>Tax</span>
                    <span>$@Model.Cart.Tax.ToString("F2")</span>
                </div>
            }
            <div class="summary-row total">
                <span>Total</span>
                <span>$@Model.Cart.Total.ToString("F2")</span>
            </div>

            <div class="security-info mt-4">
                <div class="security-item">
                    <i class="fas fa-lock"></i>
                    <span>Secure payment</span>
                </div>
                <div class="security-item">
                    <i class="fas fa-shield-alt"></i>
                    <span>Privacy protected</span>
                </div>
                <div class="security-item">
                    <i class="fas fa-download"></i>
                    <span>Instant download after purchase</span>
                </div>
            </div>

            <div class="need-help mt-4">
                <h5>Need Help?</h5>
                <a href="#" class="help-link">
                    <i class="fas fa-question-circle"></i>
                    Contact Support
                </a>
            </div>
        </div>
    </div>
</div>

<!-- Debug Information Modal -->
<div class="modal fade" id="debugModal" tabindex="-1" aria-labelledby="debugModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="debugModalLabel">Payment Debug Information</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="debugInfo" class="bg-light p-3 rounded">
                    <p>No debug information available.</p>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        $(document).ready(function() {
            // Wallet balance check
            $('#SelectedWalletId').change(function() {
                const walletId = $(this).val();
                const walletBalance = parseFloat($(this).find(':selected').text().match(/Balance: \$([0-9.]+)/)[1]);
                const orderTotal = @Html.Raw(Model.Cart.Total);

                if (walletBalance < orderTotal) {
                    $('.wallet-balance-warning').addClass('d-block').removeClass('d-none');
                } else {
                    $('.wallet-balance-warning').addClass('d-none').removeClass('d-block');
                }
            });

            // Add click handling for payment buttons with visual feedback
            $('.payment-form').on('submit', function(e) {
                // Show loading status
                $('#paymentProcessingStatus').removeClass('d-none');

                // Disable all payment buttons to prevent double submission
                $('.payment-submit-btn').prop('disabled', true);

                // Get provider type for custom message
                const provider = $(this).find('button').data('provider');
                if (provider === 'MPESA') {
                    $('#paymentStatusMessage').html('Sending M-Pesa payment request. Check your phone for STK push...');
                } else if (provider === 'FLUTTERWAVE') {
                    $('#paymentStatusMessage').html('Redirecting to Flutterwave payment gateway...');
                } else {
                    $('#paymentStatusMessage').html('Processing payment request...');
                }

                // Optional: Add AJAX error handling
                $(window).on('error', function() {
                    $('#paymentProcessingStatus').removeClass('d-none')
                        .removeClass('alert-info')
                        .addClass('alert-danger');
                    $('#paymentStatusMessage').html('There was a problem processing your payment. Please try again.');
                    $('.payment-submit-btn').prop('disabled', false);
                    return true;
                });

                // Let the form submit normally
                return true;
            });

            // Show debug modal if there's debug info in URL
            const urlParams = new URLSearchParams(window.location.search);
            if (urlParams.has('debug')) {
                const debugInfo = urlParams.get('debug');
                $('#debugInfo').text(debugInfo);
                var debugModal = new bootstrap.Modal(document.getElementById('debugModal'));
                debugModal.show();
            }
        });
    </script>
}